<launch>

  <param name="robot_description" 
      command="$(find xacro)/xacro --inorder $(find rover)/description/rover_reversed.urdf.xml"/>
  
  <arg name="cmd_vel_topic" default="/rover/mobile_base_controller/cmd_vel" />
  <arg name="odom_topic" default="/rover/mobile_base_controller/odom" />
  
  <param name="use_sim_time" value="false" />
  
  <node name="rover_hardware_interface" 
    pkg="rover_hardware_interface" 
    type="rover_hardware_interface" 
    ns="rover" 
    output="screen"/>

  <!-- Load controller config to the parameter server -->
  <rosparam command="load" file="$(find rover)/config/rover_control.yaml"/>

  <node name="controller_spawner" 
      pkg="controller_manager" 
      type="spawner" 
      respawn="false" 
      output="screen" 
      ns="rover" 
      args="joint_state_controller mobile_base_controller"/>
  
  <node name="rover_controller" pkg="rover" type="rover_diff_drive_controller.py" ns="rover" output="screen">
    <param name="~activate_lidar" value="true" />
    <remap from="~left_encoder_ticks" to="left_encoder_ticks" />
    <remap from="~right_encoder_ticks" to="right_encoder_ticks" />
    <remap from="~motor_left" to="motor_left" />
    <remap from="~motor_right" to="motor_right" />
    <remap from="~imu_link" to="imu_link" />
    <remap from="~scan_link" to="scan_link" />
  </node>
  
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization_odom" clear_params="true"> 
    <rosparam command="load" file="$(find rover)/config/robot_localization.yaml" />
    <!--<remap from="imu_link" to="/rover/imu_link"/>-->
    <remap from="odom" to="$(arg odom_topic)"/>
  </node>
  
  <node pkg="slam_toolbox" type="sync_slam_toolbox_node" name="slam_toolbox" output="screen">
    <rosparam command="load" file="$(find rover)/config/slam_toolbox.yaml" />
    <remap from="/scan" to="/rover/scan_link"/>
  </node>
  
  <node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
    <param name="default_topic" value="/rover/mobile_base_controller/cmd_vel"/>
  </node>
  
  <!-- Publish the robot state -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <param name="publish_frequency" value="10.0"/>
  </node>
  
  <node pkg="tf" 
      type="static_transform_publisher" 
      name="imu_link_broadcaster" 
      args="0 0 0 0 0 0 imu_base imu_link 10" />
  
  <node pkg="tf" 
      type="static_transform_publisher" 
      name="scan_link_broadcaster" 
      args="0 0 0 0 0 0 scan_base scan_link 10" />

  <!-- Provide simulated control of the robot joint angles -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="False" />
    <param name="rate" value="10.0"/>
  </node>

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find rover)/config/mapper.rviz">
    <remap from="/rover/joint_states" to="/joint_states" />
  </node>
  
  <!--<node name="rqt_reconfigure" pkg="rqt_reconfigure" type="rqt_reconfigure" />-->

</launch>
