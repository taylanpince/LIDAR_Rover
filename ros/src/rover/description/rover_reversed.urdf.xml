<?xml version="1.0"?>
<robot name="lidar_rover" xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:property name="base_width" value="0.16"/>
    <xacro:property name="base_length" value="0.22"/>
    <xacro:property name="base_height" value="0.003"/>

    <xacro:property name="wheel_radius" value="0.05"/>
    <xacro:property name="wheel_width" value="0.03"/>
    <xacro:property name="wheel_yoff" value="0.04"/>
    <xacro:property name="wheel_zoff" value="0.02"/>
    <xacro:property name="wheel_xgap" value="0.02"/>
    
    <xacro:property name="caster_radius" value="0.007"/>

    <!-- Robot Base -->
    <link name="base_link">
        <visual>
            <geometry>
                <box size="${base_width} ${base_length} ${base_height}"/>
            </geometry>
            <material name="Red">
                <color rgba="1.0 0.0 0.0 1.0"/>
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="${base_width} ${base_length} 0.01"/>
            </geometry>
        </collision>
    </link>
    
    <!-- Robot Footprint -->
    <link name="base_footprint" />

    <joint name="base_joint" type="fixed">
        <parent link="base_link"/>
        <child link="base_footprint"/>
        <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
    </joint>
    
    <!-- IMU Base -->
    <link name="imu_base">
        <visual>
            <geometry>
                <box size="${base_width} ${base_length/2} ${base_height/2}"/>
            </geometry>
            <material name="white">
                <color rgba="1.0 1.0 1.0 1.0"/>
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="${base_width} ${base_length/2} 0.005"/>
            </geometry>
        </collision>
    </link>

    <joint name="imu_joint" type="fixed">
        <parent link="base_link"/>
        <child link="imu_base"/>
        <origin xyz="0.0 ${-base_length/4} ${base_height}" rpy="0 0 0"/>
    </joint>
    
    <!-- LIDAR Base -->
    <link name="scan_base">
        <visual>
            <geometry>
                <box size="${base_width} ${base_length/2} ${base_height}"/>
            </geometry>
            <material name="Red">
                <color rgba="1.0 0.0 0.0 1.0"/>
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="${base_width} ${base_length/2} ${base_height}"/>
            </geometry>
        </collision>
    </link>

    <joint name="scan_joint" type="fixed">
        <parent link="base_link"/>
        <child link="scan_base"/>
        <origin xyz="0 ${-base_length/4} 0.04" rpy="0 0 0"/>
    </joint>
    
    <!-- Wheels -->    
    <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
        <link name="${prefix}_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 ${pi/2} 0"/>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
                </geometry>
                <material name="Black">
                    <color rgba="0.0 0.0 0.0 1.0"/>
                </material>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="0.005"/>
                </geometry>
            </collision>
        </link>

        <joint name="${prefix}_joint" type="continuous">
            <parent link="base_link"/>
            <child link="${prefix}_link"/>
            <origin xyz="${x_reflect*(base_width / 2 + wheel_xgap)} ${y_reflect*wheel_yoff} ${-wheel_zoff}" rpy="0 0 0"/>
            <axis xyz="1 0 0"/>
        </joint>
    </xacro:macro>

    <xacro:wheel prefix="drive_wheel_l" x_reflect="-1" y_reflect="1" />
    <xacro:wheel prefix="drive_wheel_r" x_reflect="1" y_reflect="1" />
    
    <!-- Back Caster -->
    <link name="caster_holder_link">
        <visual>
            <geometry>
                <box size="${base_width/4} ${base_length/4} ${(wheel_radius+wheel_zoff-caster_radius)}"/>
            </geometry>
            <material name="black">
                <color rgba="0.0 0.0 0.0 1.0"/>
            </material>
        </visual>
        <collision>
            <geometry>
                <box size="${base_width/4} ${base_length/4} ${(wheel_radius+wheel_zoff-caster_radius)}"/>
            </geometry>
        </collision>
    </link>

    <joint name="caster_holder_joint" type="fixed">
        <parent link="base_link"/>
        <child link="caster_holder_link"/>
        <origin xyz="0 ${-base_length/4} ${-(wheel_radius+wheel_zoff-caster_radius)/2}" rpy="0 0 0"/>
    </joint>
    
    <link name="caster_wheel_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <sphere radius="${caster_radius}"/>
            </geometry>
            <material name="steel">
                <color rgba="0.3 0.3 0.3 1.0"/>
            </material>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <sphere radius="${caster_radius}"/>
            </geometry>
        </collision>
    </link>

    <joint name="caster_wheel_joint" type="continuous">
        <parent link="caster_holder_link"/>
        <child link="caster_wheel_link"/>
        <origin xyz="0 0 ${-(wheel_radius+wheel_zoff-caster_radius)/2}" rpy="0 0 0"/>
        <axis xyz="0 0 1"/>
    </joint>

</robot>
